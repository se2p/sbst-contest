/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 15 12:28:59 GMT 2021
 */

package sbst.runtool;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import sbst.runtool.SBSTChannel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SBSTChannel_ESTest extends SBSTChannel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringWriter stringWriter0 = new StringWriter();
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      String string0 = sBSTChannel0.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("0");
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      int int0 = sBSTChannel0.number();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("6");
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      int int0 = sBSTChannel0.number();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("0");
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      long long0 = sBSTChannel0.longnumber();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Unexpected: ");
      FileSystemHandling.createFolder(evoSuiteFile0);
      StringReader stringReader0 = new StringReader("Unexpected: ");
      StringWriter stringWriter0 = new StringWriter(16);
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      File file0 = sBSTChannel0.directory_jarfile();
      assertTrue(file0.canRead());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, false);
      StringReader stringReader0 = new StringReader("/");
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      File file0 = sBSTChannel0.directory_jarfile();
      assertEquals(0L, file0.getFreeSpace());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringWriter stringWriter0 = new StringWriter();
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      // Undeclared exception!
      try { 
        sBSTChannel0.token((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Unexpected: ");
      stringReader0.close();
      StringWriter stringWriter0 = new StringWriter();
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      try { 
        sBSTChannel0.readLine();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Unexpected: ");
      StringWriter stringWriter0 = new StringWriter();
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      try { 
        sBSTChannel0.longnumber();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a valid longnumber: Unexpected: 
         //
         verifyException("sbst.runtool.SBSTChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("Unexpe[ted::");
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      // Undeclared exception!
      try { 
        sBSTChannel0.emit((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sbst.runtool.SBSTChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringWriter stringWriter0 = new StringWriter();
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      // Undeclared exception!
      try { 
        sBSTChannel0.directory_jarfile();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringWriter stringWriter0 = new StringWriter();
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      // Undeclared exception!
      try { 
        sBSTChannel0.directory();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringWriter stringWriter0 = new StringWriter();
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      // Undeclared exception!
      try { 
        sBSTChannel0.className();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SBSTChannel sBSTChannel0 = null;
      try {
        sBSTChannel0 = new SBSTChannel((Reader) null, stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("Unexpected: ");
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      sBSTChannel0.emit("Hk1_Nejt84m");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(1);
      StringReader stringReader0 = new StringReader("ih_JR_T");
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      String string0 = sBSTChannel0.className();
      assertEquals("ih_JR_T", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Unexpected: ");
      StringWriter stringWriter0 = new StringWriter();
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      try { 
        sBSTChannel0.className();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a valid class name: Unexpected: 
         //
         verifyException("sbst.runtool.SBSTChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Unexpected: ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Unexpected: ");
      StringReader stringReader0 = new StringReader("Unexpected: ");
      StringWriter stringWriter0 = new StringWriter();
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      try { 
        sBSTChannel0.directory_jarfile();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a valid directory/jar file name: Unexpected: 
         //
         verifyException("sbst.runtool.SBSTChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0JLcA $@ThV<^g_");
      StringWriter stringWriter0 = new StringWriter();
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      try { 
        sBSTChannel0.directory_jarfile();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // File/Directory does not exist: 0JLcA $@ThV<^g_
         //
         verifyException("sbst.runtool.SBSTChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Unexpected: ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Unexpected: ");
      StringReader stringReader0 = new StringReader("Unexpected: ");
      StringWriter stringWriter0 = new StringWriter();
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      try { 
        sBSTChannel0.directory();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a valid directory name: Unexpected: 
         //
         verifyException("sbst.runtool.SBSTChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Unexpected: ");
      FileSystemHandling.createFolder(evoSuiteFile0);
      StringReader stringReader0 = new StringReader("Unexpected: ");
      StringWriter stringWriter0 = new StringWriter(0);
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      File file0 = sBSTChannel0.directory();
      assertFalse(file0.isHidden());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Unexpected: ");
      StringWriter stringWriter0 = new StringWriter();
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      try { 
        sBSTChannel0.directory();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a valid directory name: Unexpected: 
         //
         verifyException("sbst.runtool.SBSTChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringWriter stringWriter0 = new StringWriter();
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      try { 
        sBSTChannel0.token("");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unexpected: null expecting: 
         //
         verifyException("sbst.runtool.SBSTChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z\"$b1>n~<7-W8}3");
      StringWriter stringWriter0 = new StringWriter();
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      sBSTChannel0.token("z\"$b1>n~<7-W8}3");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Unexpected: ");
      StringWriter stringWriter0 = new StringWriter();
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      File file0 = MockFile.createTempFile("Unexpected: ", "Unexpected: ");
      sBSTChannel0.emit(file0);
      assertTrue(file0.canWrite());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9");
      StringWriter stringWriter0 = new StringWriter(0);
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      long long0 = sBSTChannel0.longnumber();
      assertEquals(9L, long0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0JLcA $@ThV<^g_");
      StringWriter stringWriter0 = new StringWriter();
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      String string0 = sBSTChannel0.readLine();
      assertEquals("0JLcA $@ThV<^g_", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Unexpected: ");
      StringWriter stringWriter0 = new StringWriter(0);
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      try { 
        sBSTChannel0.number();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a valid number: Unexpected: 
         //
         verifyException("sbst.runtool.SBSTChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("Unexpected: ");
      SBSTChannel sBSTChannel0 = new SBSTChannel(stringReader0, stringWriter0);
      sBSTChannel0.emit(56);
      assertEquals("56\n", stringWriter0.toString());
  }
}
